name: 'UI Tests'

on: push

jobs:
  # Install and cache npm dependencies
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2
      - name: Cache yarn dependencies and cypress
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1
      - name: Install dependencies if cache invalid
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
  # Run interaction and accessibility tests
  # interaction-and-accessibility:
  #   runs-on: ubuntu-latest
  #   needs: install-cache
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #     - name: Restore yarn dependencies
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           node_modules
  #         key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-v1
  #    - name: Install Playwright
  #      run: npx playwright install --with-deps
  #    - name: Build Storybook
  #      run: yarn build-storybook --quiet
  #    - name: Serve Storybook and run tests
  #      run: |
  #        npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
  #          "npx http-server storybook-static --port 6006 --silent" \
  #          "npx wait-on tcp:6006 && yarn test-storybook"
  # Run visual and composition tests with Chromatic
  visual-and-composition:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required to retrieve git history
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: ${{ runner.os }}-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          # Grab this from the Chromatic manage page
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  # # Run user flow tests with Cypress
  user-flow:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cypress info
        uses: ./
        with:
          # just for full picture after installing Cypress
          # print information about detected browsers, etc
          # see https://on.cypress.io/command-line#cypress-info
          build: npx cypress info
          working-directory: examples/v10/chrome

      - name: Electron
        uses: ./
        with:
          working-directory: examples/v10/chrome

      # store screenshot captured during the test
      - uses: actions/upload-artifact@v2
        with:
          name: screenshots-in-electron
          path: examples/v10/chrome/cypress/screenshots

      - run: npx image-size cypress/screenshots/**/*.png
        working-directory: examples/v10/chrome

      - name: Chrome
        uses: ./
        with:
          working-directory: examples/v10/chrome
          browser: chrome

      - uses: actions/upload-artifact@v2
        with:
          name: screenshots-in-chrome
          path: examples/v10/chrome/cypress/screenshots

      - uses: actions/upload-artifact@v2
        with:
          name: video-in-chrome
          path: examples/v10/chrome/cypress/videos

      - run: npx image-size cypress/screenshots/**/*.png
        working-directory: examples/v10/chrome

      # I wonder if GH Actions VM includes any of the tools that
      # can tell us the resolution of a video file
      - run: ffprobe cypress/videos/*.mp4 || true
      - run: mplayer -really-quiet -ao null -vo null -identify -frames 0 cypress/videos/*.mp4 || true

      - name: Chrome headless
        uses: ./
        with:
          working-directory: examples/v10/chrome
          browser: chrome
          headless: true

      - uses: actions/upload-artifact@v2
        with:
          name: screenshots-in-headless-chrome
          path: examples/v10/chrome/cypress/screenshots

      - uses: actions/upload-artifact@v2
        with:
          name: video-in-headless-chrome
          path: examples/v10/chrome/cypress/videos

      - run: npx image-size cypress/screenshots/**/*.png
        working-directory: examples/v10/chrome