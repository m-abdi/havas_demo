console.log(JSON.parse('{"originalError": {
"message": "\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 'd06cd5a2-45ff-44e1-a090-54aaedd3d621'\n  },\n  data: {\n    name: 'ساختمان',\n    typeOfWork: 'زمینه',\n    superPlace: {\n      connect: {\n        id: '5bd19808-cee0-40d7-9a2b-acac152e4028'\n      }\n    },\n    representative: {\n      connect: {\n?       id?: String,\n?       placeId?: String\n      },\n?     create?: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput,\n?     connectOrCreate?: {\n?       where: PersonWhereUniqueInput,\n?       create: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput\n?     },\n?     upsert?: {\n?       update: PersonUpdateWithoutPlaceInput | PersonUncheckedUpdateWithoutPlaceInput,\n?       create: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput\n?     },\n?     disconnect?: Boolean,\n?     delete?: Boolean,\n?     update?: PersonUpdateWithoutPlaceInput | PersonUncheckedUpdateWithoutPlaceInput\n    },\n    state: 'مرکزی',\n    city: '',\n    postalCode: '',\n    address: '',\n    telephone: '',\n    mobileNumber: '',\n    website: '',\n    nationalId: '',\n    economicalCode: '',\n    registeredNumber: '',\n    description: ''\n  }\n}\n\nArgument data.representative.connect of type PersonWhereUniqueInput needs at least one argument. Available args are listed in green.\n\nNote: Lines with ? are optional.\n",
		"stack": "Error: \nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 'd06cd5a2-45ff-44e1-a090-54aaedd3d621'\n  },\n  data: {\n    name: 'ساختمان',\n    typeOfWork: 'زمینه',\n    superPlace: {\n      connect: {\n        id: '5bd19808-cee0-40d7-9a2b-acac152e4028'\n      }\n    },\n    representative: {\n      connect: {\n?       id?: String,\n?       placeId?: String\n      },\n?     create?: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput,\n?     connectOrCreate?: {\n?       where: PersonWhereUniqueInput,\n?       create: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput\n?     },\n?     upsert?: {\n?       update: PersonUpdateWithoutPlaceInput | PersonUncheckedUpdateWithoutPlaceInput,\n?       create: PersonCreateWithoutPlaceInput | PersonUncheckedCreateWithoutPlaceInput\n?     },\n?     disconnect?: Boolean,\n?     delete?: Boolean,\n?     update?: PersonUpdateWithoutPlaceInput | PersonUncheckedUpdateWithoutPlaceInput\n    },\n    state: 'مرکزی',\n    city: '',\n    postalCode: '',\n    address: '',\n    telephone: '',\n    mobileNumber: '',\n    website: '',\n    nationalId: '',\n    economicalCode: '',\n    registeredNumber: '',\n    description: ''\n  }\n}\n\nArgument data.representative.connect of type PersonWhereUniqueInput needs at least one argument. Available args are listed in green.\n\nNote: Lines with ? are optional.\n\n    at Object.validate (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:44201:20)\n    at PrismaClient._executeRequest (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:46354:17)\n    at consumer (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:46298:23)\n    at /home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:46302:76\n    at runInChildSpan (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:45510:12)\n    at /home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:46302:20\n    at AsyncResource.runInAsyncScope (node:async_hooks:199:9)\n    at PrismaClient._request (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:46301:86)\n    at /home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:42862:25\n    at _callback (/home/mordad/Documents/Programming/React/havas/node_modules/@prisma/client/runtime/index.js:42626:52)"
	}
}'));